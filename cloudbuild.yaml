steps:

- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/$PROJECT_ID/airflow:${_AIRFLOW_VERSION}',
        '-t', 'gcr.io/$PROJECT_ID/airflow',
        '--build-arg', 'AIRFLOW_VERSION=${_AIRFLOW_VERSION}',
        '.']

- name: 'gcr.io/$PROJECT_ID/airflow:${_AIRFLOW_VERSION}'
  id: Validation Test
  # Validate the integrity of the DAG files.
  entrypoint: python
  args:
    [ '-m', 'unittest', 'tests/sample_test.py']

# - name: 'gcr.io/$PROJECT_ID/airflow:${_AIRFLOW_VERSION}'
#   id: Check DAG's
#   entrypoint: bash
#   args:
#     [ 'scripts/deploy.sh']
  
  # Deploy the DAGs to your composer environment DAGs GCS folder
- name: 'gcr.io/cloud-builders/gsutil'
  id: Deploy SQL to composer
  args:
    [ '-m',
    'rsync','-r', '-c','-x', '.*\.pyc|airflow_monitoring.py',
    'bql/',
    '${_COMPOSER_BUCKET}/dags/bql/'
    ]
    
- name: 'gcr.io/cloud-builders/gsutil'
  id: Deploy DAGs to composer
  args:
    [ '-m',
    'rsync','-r', '-c','-x', '.*\.pyc|airflow_monitoring.py',
    'dags/',
    '${_COMPOSER_BUCKET}/dags/'
    ]

substitutions:
  _AIRFLOW_VERSION: 1.10.6

images:
  [ 'gcr.io/$PROJECT_ID/airflow:latest',
    'gcr.io/$PROJECT_ID/airflow:$_AIRFLOW_VERSION' 
  ]